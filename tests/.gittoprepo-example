[repos]
# Tells which sub repos to use.
# Each value starts with `+` or `-` followed by a regexp that should match a
# whole repository name. The expressions are matched in the order specified and
# the first matching regex decides whether the repo should be expanded or not.
# Defaults to ["+.*"].
filter = [
  "+.*",
]

# Repo name defaults to base name of url.
[repo.something]
urls = [
  "github.com/meroton/git-toprepo.git",
  "server.internal/git-toprepo.git",
]
# The date of the oldest commit to import.
# If a commit is filtered out, all its parents will also be removed.
# Default is "1970-01-01T00:00:00Z".
since = "2024-04-01T00:00:00Z"

# push.url defaults to fetch.url.
push.url = "ssh://git@github.com/meroton/git-toprepo.git"
push.args = []

[repo.something.fetch]
url = "ssh://git@github.com/meroton/git-toprepo.git"
# Affects the --prune fetch arg, defaults to true.
prune = true
# Does not affect --prune, default is [].
args = [
  "--depth=1",
]
refspecs = [
  "+refs/heads/*:refs/toprepo/something/heads/*",
  "+refs/tags/*:refs/toprepo/something/tags/*",
]

[repo.something.commits]
# Sometimes, submodules point to commits that do not exist anymore. This can
# for example happen when a branch has been removed. To give the same view and
# resolved commit hashes to all users, every missing commit needs to be listed.
# Otherwise, one user might have the commit locally.
missing = [
"0123abc",
"0123ab3",
]

[repo.something.commits.override_parents]
# An empty parents list will create a grafted commit.
"01234" = [ "12345", "abcdef" ]